Ch 9: Store Your Stuff

- How to store your data using a SQLite database
- How to create and manage your own SQLite database 
- How to integrate the SQLite database with your ListView in the TimeTracker app. 

------------------------

- Persist the list data in the SQLite database and display the data from the database, and you'll have 'persistent data storage'.


Storing times in the database: 

1. Create a database for your app.
2. Save a time record. 
3. Load time records.
4. Update the List to use the database. 




----------Start By Creating The Database----------

- SQLiteOpenHelper() = provides you will all of the basic behavior to manage a database. 

- Create a new class (ex. TimeTrackerOpenHelper) that extends SQLiteOpenHelper. There are 3 methods you'll need to implement that describes how to connect to your database, initially create tables, and upgrade from previous versions. 


Example: 

public static class TimeTrackerOpenHelper extends SQliteOpenHelper {
	
	TimeTrackerOpenHelper(Context context) {
		super(context, "timetracker.db", null, 1);        // pass the name of the database to 'super'
	}


	public void onCreate(SQLiteDatabase database) {
		// Create your tables in here
	}


	public void onUpgrade(SQLiteDatabase database, int oldVersion, int newVersion) {
		handle database schema upgrades in here
	}

}





----------Instantiate the OpenHelper----------

- The database is created internally by the OpenHelper when it is instantiated. 


- In TimeTracker, add the following line, creating an instance of the TimeTrackerOpenHelper. 

Example: 

public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.main);

	ListView listView = (ListView)findViewById(R.id.times_list);
	timeTrackerAdapter = new TimeTrackerAdapter();
	listView.setAdapter(timeTrackerAdapter);

	TimeTrackerOpenHelper openHelper = new TimeTrackerOpenHelper(this);        // Instantiating your custom open helper will cause the database to be created. 

}



----------Design The Database----------

- Look at what you need to store and how to structure the database to store that information. 

- The ID field is the primary key for the database. 



----------Create The Initial Table----------

- The database design includes the one 'timerecords' table you'll need to create when the database is created. We overrode the 'onCreate' method in SQLiteOpenHelper when we wrote the TimeTrackerOpenHelper (which created a blank database).

- Include the code to create the intial table: 

create table timerecords (id integer primary key time text, notes text)



----------Updating The Database Creation----------

